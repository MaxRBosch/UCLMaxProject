{"version":3,"sources":["webpack:///src/app/eth/eth.page.html","webpack:///src/app/eth/eth-routing.module.ts","webpack:///src/app/eth/eth.module.ts","webpack:///src/app/eth/eth.page.scss","webpack:///src/app/eth/eth.page.ts"],"names":["routes","path","component","EthPageRoutingModule","imports","forChild","exports","EthPageModule","declarations","EthPage","storage","alertCtrl","ibmmodel","valService","login","loaded","predictions","rendered","hist_time","hist_price","pred_price","pred_time","Promise","resolve","get","then","isLoggedin","min_predict_value","min_value","getprice","check_token","logged_in_wait","prediction","set","userID","a","params","type","time","Date","now","value","res","load","get_hist_price","get_chart","setInterval","lineChart","lineCanvas","nativeElement","data","labels","datasets","fill","label","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","spanGaps","datalabels","color","align","display","borderWidth","options","maintainAspectRatio","responsive","title","text","scales","xAxes","distribution","ticks","fontSize","maxTicksLimit","scaleLabel","labelString","gridLines","yAxes","min","Math","floor","apply","filter","Boolean","max","ceil","legend","position","boxWidth","usePointStyle","url","hour12","hour","day","month","i","length","push","toLocaleDateString","j","console","log","day_month","includes","indexOf","price","toLocaleString","apikey","IBM_Cloud_IAM_uid","IBM_Cloud_IAM_pwd","axiosConfig","headers","btoa","post","axiosConfigresult","access_token","payload","scoring_url","date","year","String","getFullYear","getMonth","getDate","getHours","minute","getMinutes","parseInt","ibm_prediction_time","substr","charAt","array_values_string","toString","array_values","fire","showLoading","predict_api","show_prediction","icon","mins","imageUrl","imageWidth","imageHeight","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","cancelButtonText","result","getTime","timestamp","save","selector","template"],"mappings":"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","file":"eth-eth-module-es5.js","sourcesContent":["export default \"<div [hidden]=!this.logged_in_wait>\\n\\n<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar mode=\\\"ios\\\">\\n    <ion-title style= \\\"position: absolute; \\\">Ethereum</ion-title>\\n\\n    <ion-buttons slot=\\\"start\\\" display=\\\"inline-block\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button expand=\\\"block\\\"  color=\\\"tertiary\\\" shape=\\\"round\\\" (click)=\\\"this.login.logout()\\\">\\n        <ion-text style=\\\"color:white\\\"> Logout </ion-text>\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"log-out\\\" style='color:white'  ></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-card style=\\\"background-color:#259ACB\\\"> \\n    <ion-card-title style=\\\"text-align:center; margin-top:10px; color:white\\\">Current price ($)</ion-card-title>\\n    <ion-card-content>\\n        \\n        <table  style='table-layout:fixed; width: 100%'>\\n         \\n          <tr>\\n            <td><img src=\\\"assets/icon/eth_png.png\\\"style=\\\"height:7vh;width:auto;padding-left:20vw\\\"></td>\\n            <td class='price' [innerHTML]=\\\"price\\\"></td>\\n          </tr>\\n         \\n       \\n        </table>\\n      \\n        \\n    </ion-card-content>\\n  </ion-card>\\n  \\n  \\n  <div *ngIf=\\\"this.loaded =='init'\\\">Rendering</div>\\n  <ion-card *ngIf= \\\"this.rendered  =='rendered'\\\" style=\\\" background-color:#90D377\\\">\\n    <ion-card-title style=\\\"text-align:center; margin-top:4px; color:white; font-weight: bold;\\\">Hourly prices</ion-card-title>\\n    \\n    \\n    <ion-card-content style=\\\"height:40vh;\\\">\\n      <canvas #lineCanvas></canvas>\\n      <div *ngIf=\\\"this.help =='help'\\\">Previous predictions are displayed in the graph above. They are displayed in an hourly format (i.e. a prediction for 11:34 is displayed as 11:00).</div>\\n    </ion-card-content>\\n  </ion-card>\\n  \\n  \\n  <ion-card style=\\\"background-color:#E56F49\\\"> \\n    <ion-card-title style=\\\"text-align:center; margin-top:4px; color:white; font-weight: bold;\\\">Predict with ML</ion-card-title>\\n\\n    <ion-card-content style='color:white'>\\n      <ion-item>\\n        <ion-datetime  min={{min_predict_value}} max=\\\"2023\\\" [(ngModel)] = \\\"ibm_prediction_time\\\" placeholder=\\\"Select Date and time\\\"\\n          [dayShortNames]=\\\"customDayShortNames\\\"\\n          displayFormat=\\\"YYYY-MMM-DD HH:mm\\\"\\n          monthShortNames=\\\"jan, feb, mar, apr, mai, jun, jul, aug, sep, okt, nov, des\\\"></ion-datetime>\\n      </ion-item>\\n      <ion-button style=\\\"--background: #A24E33\\\" id=\\\"saving\\\" expand=\\\"block\\\" (click)='predict_ibm()'>\\n        Predict!\\n    </ion-button>\\n    </ion-card-content>\\n  </ion-card>\\n  \\n</ion-content>  </div>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EthPage } from './eth.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EthPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EthPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EthPageRoutingModule } from './eth-routing.module';\n\nimport { EthPage } from './eth.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EthPageRoutingModule\n  ],\n  declarations: [EthPage]\n})\nexport class EthPageModule {}\n","export default \"ion-menu-button {\\n  color: var(--ion-color-primary);\\n}\\n\\nion-toolbar, ion-header {\\n  --min-height: 60px;\\n}\\n\\nion-title, ion-toolbar, ion-header {\\n  font-size: 120%;\\n  color: white;\\n}\\n\\n.price {\\n  font-size: 10vw;\\n  color: white;\\n}\\n\\n.overview tr td {\\n  width: 50%;\\n}\\n\\n.item-datetime {\\n  --ripple-color: black;\\n}\\n\\n.datetime-md .datetime-placeholder {\\n  color: red;\\n}\\n\\nion-content {\\n  --ion-background-color: black;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZXRoL0M6XFxVc2Vyc1xcTWF4IEJvc2NoXFx0aGVzaXMvc3JjXFxhcHBcXGV0aFxcZXRoLnBhZ2Uuc2NzcyIsInNyYy9hcHAvZXRoL2V0aC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSwrQkFBQTtBQ0NKOztBRENFO0VBQ0Usa0JBQUE7QUNFSjs7QURBRztFQUNDLGVBQUE7RUFDQSxZQUFBO0FDR0o7O0FEQ0c7RUFBTyxlQUFBO0VBQ04sWUFBQTtBQ0dKOztBREZJO0VBQWtCLFVBQUE7QUNNdEI7O0FESkk7RUFDQSxxQkFBQTtBQ09KOztBRExJO0VBQXFDLFVBQUE7QUNTekM7O0FEUkk7RUFBYSw2QkFBQTtBQ1lqQiIsImZpbGUiOiJzcmMvYXBwL2V0aC9ldGgucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLW1lbnUtYnV0dG9uIHtcclxuICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XHJcbiAgfVxyXG4gIGlvbi10b29sYmFyLCBpb24taGVhZGVyIHtcclxuICAgIC0tbWluLWhlaWdodDogNjBweDtcclxuICAgfVxyXG4gICBpb24tdGl0bGUsIGlvbi10b29sYmFyLCBpb24taGVhZGVyIHtcclxuICAgIGZvbnQtc2l6ZTogMTIwJTtcclxuICAgIGNvbG9yOndoaXRlO1xyXG4gICB9XHJcblxyXG4gICBcclxuICAgLnByaWNle2ZvbnQtc2l6ZToxMHZ3O1xyXG4gICAgY29sb3I6d2hpdGU7fVxyXG4gICAgLm92ZXJ2aWV3IHRyIHRkIHsgd2lkdGg6NTAlOyB9XHJcblxyXG4gICAgLml0ZW0tZGF0ZXRpbWUge1xyXG4gICAgLS1yaXBwbGUtY29sb3I6IGJsYWNrO31cclxuXHJcbiAgICAuZGF0ZXRpbWUtbWQgLmRhdGV0aW1lLXBsYWNlaG9sZGVyIHsgY29sb3I6IHJlZDsgfVxyXG4gICAgaW9uLWNvbnRlbnQgey0taW9uLWJhY2tncm91bmQtY29sb3I6IGJsYWNrO31cclxuIiwiaW9uLW1lbnUtYnV0dG9uIHtcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5KTtcbn1cblxuaW9uLXRvb2xiYXIsIGlvbi1oZWFkZXIge1xuICAtLW1pbi1oZWlnaHQ6IDYwcHg7XG59XG5cbmlvbi10aXRsZSwgaW9uLXRvb2xiYXIsIGlvbi1oZWFkZXIge1xuICBmb250LXNpemU6IDEyMCU7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLnByaWNlIHtcbiAgZm9udC1zaXplOiAxMHZ3O1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5vdmVydmlldyB0ciB0ZCB7XG4gIHdpZHRoOiA1MCU7XG59XG5cbi5pdGVtLWRhdGV0aW1lIHtcbiAgLS1yaXBwbGUtY29sb3I6IGJsYWNrO1xufVxuXG4uZGF0ZXRpbWUtbWQgLmRhdGV0aW1lLXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IHJlZDtcbn1cblxuaW9uLWNvbnRlbnQge1xuICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbn0iXX0= */\";","import { Component, OnInit, ViewChild, ElementRef } from \"@angular/core\";\nimport { Chart } from \"chart.js\";\nimport axios from 'axios'\nimport { Storage } from '@ionic/storage';\nimport { findLast } from '@angular/compiler/src/directive_resolver';\nimport { AlertController } from '@ionic/angular';\nimport { AuthorizationV1} from 'ibm-watson/sdk'\nimport{IamAuthenticator} from 'ibm-watson/auth'\nimport {Request} from 'request'\nimport Swal from 'sweetalert2'\nimport {PredictionsService} from '../services/predictions.service'\nimport { MinvalService } from '../services/minval.service';\nimport { LoginService } from '../services/login.service';\n\n@Component({  \n  selector: 'app-eth',\n  templateUrl: './eth.page.html',\n  styleUrls: ['./eth.page.scss'],\n})\nexport class EthPage implements OnInit {@ViewChild(\"lineCanvas\") lineCanvas: any;\nprivate lineChart: Chart;\npublic loaded: string = 'init';\npublic predictions: Predictions[] = [];\npublic rendered: string = 'rendered';\ntime:any;\nprice:number;\nhist_time:any =[]\nhist_price:any =[]\npred_price:any =[]\npred_time:any =[]\nmin_predict_value:string\nibm_prediction_time:string\npublic logged_in_wait: boolean\n\n\n\nconstructor(private storage: Storage, private alertCtrl: AlertController, private ibmmodel: PredictionsService, public valService: MinvalService, public login: LoginService\n\n  ) { }\n  load(): Promise<boolean> {\n\n    return new Promise((resolve) => {\n\n      this.storage.get('predictions_eth').then((predictions) => {\n\n        if(predictions != null){\n          this.predictions = predictions;\n          \n          \n          \n        }\n\n        resolve(true);\n\n      });\n\n    });\n  }\n  \nngOnInit() {  \n  this.isLoggedin()\n\n  this.min_predict_value = this.valService.min_value()\n  \n   this.getprice();\n  \n  \n  \n\n\n}\n\n\n\nasync isLoggedin(){ this.logged_in_wait = await this.login.check_token()}\n\n\nasync save(prediction) {\n  this.hist_time =[]\n  this.hist_price =[]\n  this.pred_price =[]\n  this.pred_time =[]\n await this.storage.set('predictions_eth', this.predictions);\n var userID = await this.storage.get('token')\n\n let res = await axios.get('https://nodemrbosch.azurewebsites.net/api/addprediction',{params:{userID:userID,type:'eth',time:Date.now(),value:prediction}});\n  await this.load();\n  \nawait this.get_hist_price();\nawait this.get_chart();\nreturn\n}\n\n\n\n\n\n\nasync get_chart(){\n  setInterval(async() =>{  this.getprice()},60000);  \n\n  \n\n\n  this.lineChart = new Chart(this.lineCanvas.nativeElement, {\n    type: \"line\",\n    data: {\n      labels: this.hist_time,\n     \n      datasets: [\n        {\n          fill: true,\n          label: \"Actual price\",\n          lineTension: 0.3,\n          backgroundColor: \"rgb(5, 156, 45, 0.6)\",\n          borderColor: \"rgba(220, 220, 220, 1)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgba(220, 220, 220, 0.5)\",\n          pointBackgroundColor: \"rgba(220,220,220,1)\",\n          pointBorderWidth: 1,\n          pointHoverRadius: 1,\n          pointHoverBackgroundColor: \"rgba(220,220,220,1)\",\n          pointHoverBorderColor: \"rgba(220,220,220,1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: this.hist_price,\n          spanGaps: false,\n          \n          \n          datalabels: {\n            color: 'black',\n            align: 'end',\n            display: false\n\n            \n              \n        }\n        },{\n          label: \"Prediction\",\n          data: this.pred_price,\n          borderWidth: 2,\n          backgroundColor: \"red\",\n          borderColor: \"red\",\n          pointBackgroundColor: \"red\",\n          pointBorderColor: \"red\",\n          pointHoverBackgroundColor: \"red\",\n          pointHoverBorderColor: \"red\",\n          type: 'scatter',\n          datalabels: {\n            color: 'black',\n            align: 'end',\n            display: false\n            \n              \n        }\n       }]\n    },options: {  maintainAspectRatio: false, \n      responsive: true, \n      title: {\n        display: false,\n        text: 'Bitcoin price ($) in 2020'\n    },\n      scales: {\n        xAxes: [{\n            distribution : 'series',\n            display: true,\n            ticks: {fontSize: 10,\n              maxTicksLimit: 4.1,\n                  },\n            scaleLabel: {\n                display: false,\n                labelString: \"Date\",\n            },\n            gridLines: {\n              borderDash: [8, 4],\n              color: \"#348632\",\n              display: false\n          },\n        }]\n        ,\n        yAxes: [{\n          ticks: {\n              min: Math.floor(Math.min((Math.min(...this.hist_price)),(Math.min(Math.min.apply(0, this.pred_price.filter(Boolean)))))/1000)*1000 +1,\n              max: Math.ceil(Math.max((Math.max(...this.hist_price)),(Math.max(...this.pred_price)))/1000)*1000,\n             \n        maxTicksLimit: ((Math.ceil(Math.max((Math.max(...this.hist_price)),(Math.max(...this.pred_price)))/1000))-(Math.floor(Math.min((Math.min(...this.hist_price)),(Math.min(Math.min.apply(0, this.pred_price.filter(Boolean)))))/1000)))+2,\n        \n          },\n          gridLines: {\n            borderDash: [8, 4],\n            color: \"#348632\",\n            display: false\n        },\n      }]\n    },    \n    legend: {\n      display: true,\n      position:'bottom',\n      labels:\n      {boxWidth:10,\n        usePointStyle:true}\n    }\n    }\n    \n  });\n\n}\n// async ionViewWillEnter (){\n// }\nasync ionViewDidEnter () {\n  await this.isLoggedin()\n  await this.load();\nawait this.get_hist_price();\nawait this.get_chart()\nreturn\n}\n\nasync get_hist_price()\n{\n\nvar url = \"https://api.binance.com/api/v1/klines?symbol=ETHUSDT&interval=1h\";\nconst res = await axios.get(url)\n\nvar i;\nvar options = {\n  hour12: false,hour:'numeric',day: 'numeric',month: 'numeric',\n};\nfor (i = 0; i < res.data.length; i++) {\nthis.hist_time.push(new Date(res.data[i][0]).toLocaleDateString('nl', options));\nthis.hist_price.push(Math.floor(res.data[i][1]))\nthis.pred_price.push(0)\n// this.pred_time.push(new Date(res.data[i][0]).toLocaleDateString('en', options))\n\n}\nvar j;\nfor (j = 0; j < this.predictions.length; j++) {\nconsole.log(this.predictions[j].day_month)\nif (this.hist_time.includes(this.predictions[j].day_month)){\n  \n  \n  this.pred_price[(this.hist_time.indexOf(this.predictions[j].day_month))] = this.predictions[j].price\nconsole.log(this.pred_price)\n}}\nreturn\n}\n\nasync getprice()\n{\n\n  this.min_predict_value = this.valService.min_value()\n\n\n  \ntry{\n\nvar url = \"https://api.binance.com/api/v1/klines?symbol=ETHUSDT&interval=1m\";\nconst res = await axios.get(url)\n\n\n\nif (res.data.length != 0){\n  this.loaded = 'yes'}\n  else {this.loaded='no'}\nthis.time = new Date(res.data[res.data.length-1][0]).toLocaleString()\n\nthis.price = Math.floor(res.data[res.data.length-1][1])\nreturn\n}\ncatch {this.loaded = 'no'; return}\n\n}\n\n\nasync ibm_predict(){\nconst apikey = '59eP5YTkCoW_eM8rf93ecP8zu1erXOnKOE9nYuqzTyAU'\n  \n\n// Paste your Watson Machine Learning service apikey here\n\n// Use this code as written to get an access token from IBM Cloud REST API\n//\nvar url     = \"https://cors-anywhere.herokuapp.com/https://iam.bluemix.net/oidc/token\"\nvar IBM_Cloud_IAM_uid = \"bx\";\nvar IBM_Cloud_IAM_pwd = \"bx\";\nvar data = \"apikey=\" + apikey + \"&grant_type=urn:ibm:params:oauth:grant-type:apikey\"\nlet axiosConfig = {\n  headers:{'Content-Type': 'application/x-www-form-urlencoded',\n  \"Access-Control-Allow-Origin\": \"true\",\n  \"Authorization\" : \"Basic \" + btoa( IBM_Cloud_IAM_uid + \":\" + IBM_Cloud_IAM_pwd ) },\n}\nvar res = await axios.post( url, data,axiosConfig )\nlet axiosConfigresult = {\n  headers:{'Content-Type': 'application/json',\n  \"Authorization\" : \"Bearer \" + res.data.access_token ,\n  'ML-Instance-ID': \"50324b61-a64d-48fd-b784-ff39b33b05f0\"\n}}\nconst payload = '{\"input_data\": [{\"fields\": [\"Year\", \"Month\", \"Day\", \"Hour\", \"Minute\", \"Tot_subjectivity\", \"Tot_polarity\", \"Tot_submissions\"], \"values\": [[2020,12,12,2,2,0,0,0]]}]}';\nconst scoring_url = await axios.post(\"https://cors-anywhere.herokuapp.com/https://eu-gb.ml.cloud.ibm.com/v4/deployments/6110091e-dcc1-4b34-a97b-64b05d0f9601/predictions\",payload,axiosConfigresult)\n\n}\n\nmin_value(){\n  var date = new Date();\n  var year = String(date.getFullYear())\n  var month=String(((date.getMonth()+1)>=10)? (date.getMonth()+1) : '0' + (date.getMonth()+1))  \n  var day= String(((date.getDate())>=10)? (date.getDate()) : '0' + (date.getDate()))\n  // source https://stackoverflow.com/questions/6040515/how-do-i-get-month-and-date-of-javascript-in-2-digit-format\n  var hour = String(date.getHours());\n  var minute = String(date.getMinutes()+5);\n  this.min_predict_value = year+\"-\"+month+\"-\"+day+\"T\"+hour+\":\"+minute\n\n  return this.min_predict_value\n  \n\n\n}\n\n\n\nasync predict_ibm(){\n  try{\n  var year = parseInt(this.ibm_prediction_time.substr(0,4))\n  if (this.ibm_prediction_time.charAt(5) == '0')\n  {var month = parseInt(this.ibm_prediction_time.charAt(6))}\n  else {\n  var month = parseInt(this.ibm_prediction_time.substr(5,6))}\n  \n  if (this.ibm_prediction_time.charAt(8) == '0')\n  {var day = parseInt(this.ibm_prediction_time.charAt(9))}\n  else {\n  var day = parseInt(this.ibm_prediction_time.substr(8,9))}\n\n  if (this.ibm_prediction_time.charAt(11) == '0')\n  {var hour = parseInt(this.ibm_prediction_time.charAt(12))}\n  else {\n  var hour = parseInt(this.ibm_prediction_time.substr(11,12))}\n\n  if (this.ibm_prediction_time.charAt(14) == '0')\n  {var minute = parseInt(this.ibm_prediction_time.charAt(15))}\n  else {\n  var minute = parseInt(this.ibm_prediction_time.substr(14,15))}\n  \n  var array_values_string = [[year,month,day,hour,minute,0,0,0]].toString()\n  \n  var array_values = [year,month,day,hour,minute,0,0,0]\n  }\n  catch{Swal.fire('Please select a date and time for your prediction'); return}\n  // Paste your Watson Machine Learning service apikey here\n  \n  // Use this code as written to get an access token from IBM Cloud REST API\n  //\n  Swal.fire('Please hold on while we are getting your prediction')\n  Swal.showLoading()\n   const res = await this.ibmmodel.predict_api(this.ibm_prediction_time,'eth')\n\n   if (res != null){\n    await this.show_prediction(res,array_values)\n    }else{Swal.fire({\n      icon: 'error',\n      title: 'The model is currently down',\n    text:'We have logged your error and will resolve it as soon as possible'})\n        }\n      }\n\nasync show_prediction(prediction,array_values){\n  var mins = array_values[4]\n  mins >=10? mins = String(mins) : mins = '0' + String(mins)\n  \n  Swal.fire({\n    title: 'You predicted 1 ethereum to be ' + parseInt(prediction).toString()+' dollars in '+String(array_values[2])+\"-\"+String(array_values[1])+\"-\"+String(array_values[0])+\" at \"+String(array_values[3])+\":\"+mins,\n    text: 'Do you want to save this prediction?',\n    imageUrl: \"../../assets/img/ML.png\",\n  imageWidth: 288,\n  imageHeight: 162,\n    showCloseButton: false,\n    showCancelButton: true,\n    focusConfirm: false,\n    confirmButtonText:'Save',\n    cancelButtonText:'Cancel',\n    }).then(async (result) => {\n      if (result.value){\n\n        \n  var options = {\n    hour12: false,hour:'numeric',day: 'numeric',month: 'numeric',\n}\nvar now = new Date().toLocaleDateString('nl', options)\n\nvar hour = String(((array_values[3])>=10)? array_values[3] : '0' + (array_values[3]));\n\nvar time = new Date().getTime()\n  this.predictions.push({\n    price: parseInt(prediction),\n    day_month: String(array_values[2])+\"-\"+String(array_values[1])+\" \"+hour,\n    timestamp: time,\n    type: \"Eth\"\n  });   \n  await this.save(prediction);\n\n\n\n\n  }})}\n\n\n}\nexport interface Predictions {\nprice: number;\nday_month: any;\ntimestamp: number;\ntype: string;\n\n}"]}