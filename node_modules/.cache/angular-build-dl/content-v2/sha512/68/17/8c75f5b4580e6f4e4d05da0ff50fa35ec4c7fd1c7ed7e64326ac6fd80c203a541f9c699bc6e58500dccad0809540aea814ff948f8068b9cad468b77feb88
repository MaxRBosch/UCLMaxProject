{"version":3,"sources":["webpack:///src/app/predictions/predictions.page.html","webpack:///src/app/predictions/predictions-routing.module.ts","webpack:///src/app/predictions/predictions.module.ts","webpack:///src/app/predictions/predictions.page.scss","webpack:///src/app/predictions/predictions.page.ts","webpack:///src/app/services/login.service.ts"],"names":["routes","path","component","PredictionsPageRoutingModule","imports","forChild","exports","PredictionsPageModule","declarations","PredictionsPage","storage","alertCtrl","login","predictions_btc","predictions_eth","title","loaded","headers","headers_2","Promise","resolve","get","then","prediction","thing","index","indexOf","splice","set","check_token","logged_in_wait","isLoggedin","load","selector","template","LoginService","router","res","navigate","providedIn"],"mappings":"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","file":"predictions-predictions-module-es5.js","sourcesContent":["export default \"\\n  <div [hidden]=!this.logged_in_wait>\\n\\n\\n    \\n<ion-header [translucent]=\\\"true\\\">\\n  \\n  <ion-toolbar mode=\\\"ios\\\">\\n    <ion-buttons slot=\\\"start\\\" display=\\\"inline-block\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button expand=\\\"block\\\"  color=\\\"tertiary\\\" shape=\\\"round\\\" (click)=\\\"this.login.logout()\\\">\\n        <ion-text style=\\\"color:white\\\"> Logout </ion-text>\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"log-out\\\" style='color:white'  ></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title style= \\\"position: absolute; \\\">{{title}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-card style=\\\"background-color:#90D377; width: 93vw;\\\"> \\n    <ion-card-title style=\\\"text-align:center; margin-top:4px; color:white\\\">Bitcoin</ion-card-title>\\n    <ion-card-content>\\n\\n  <div id =\\\"tbl_btc\\\">\\n    <table style='width: 100%'>\\n  <tr>\\n    <th *ngFor = \\\"let column of headers_2\\\">{{column}}</th>\\n  </tr>\\n  <tr *ngFor = \\\"let prediction_btc of predictions_btc\\\">\\n    <td *ngFor = \\\"let column of headers\\\">\\n      {{prediction_btc[column]}}\\n    </td><td style='width:8%'><ion-buttons slot=\\\"end\\\">\\n\\n              \\n      <ion-icon name=\\\"trash\\\" style='color:black; ' (click)=\\\"delete_item(prediction_btc,'btc')\\\"></ion-icon>\\n    </ion-buttons></td> \\n  </tr>\\n</table>\\n</div>\\n</ion-card-content>\\n</ion-card>\\n<ion-card style=\\\"background-color:#E56F49; width: 93vw;\\\"> \\n  <ion-card-title style=\\\"text-align:center; margin-top:4px; color:white\\\">Ethereum</ion-card-title>\\n    <ion-card-content>\\n\\n  <div id =\\\"tbl_eth\\\">\\n    <table style='width: 100%'>\\n      <tr>\\n        <th *ngFor = \\\"let column of headers_2\\\">{{column}}</th>\\n      </tr>\\n  <tr *ngFor = \\\"let prediction_eth of predictions_eth\\\">\\n    <td *ngFor = \\\"let column of headers\\\">\\n      {{prediction_eth[column]}}\\n    </td><td style='width:8%'><ion-buttons slot=\\\"end\\\">\\n\\n              \\n      <ion-icon style= \\\"font-size: 25px; \\\"  name=\\\"trash\\\" style='color:black' (click)=\\\"delete_item(prediction_eth,'eth')\\\"></ion-icon>\\n    </ion-buttons></td> \\n  </tr>\\n</table>\\n</div>\\n</ion-card-content>\\n</ion-card>\\n  <!-- <ion-grid>\\n    <ion-row>\\n     \\n      <ion-col>\\n        <ion-card class=\\\"no-padding\\\">\\n          <ion-card-header>\\n            \\n           <span style=\\\"font-size:30px; color:white;padding-top:40px\\\">Your predictions</span>\\n            \\n            \\n            <div class='del'style=\\\"float: right; margin-right:-3vw\\\">\\n            <ion-icon style= \\\"font-size: 30px\\\"  name=\\\"trash\\\" (click)=\\\"delete_all()\\\">\\n          </ion-icon>\\n          <p style=\\\" font-size: 12px; text-align:center; margin-top: -0.6vh;\\\">Del</p>\\n        </div>\\n\\n          \\n        </ion-card-header>\\n       \\n\\n\\n          <ion-list class=\\\"no-scroll no-padding\\\">\\n      \\n\\n          <div *ngFor=\\\"let prediction of predictions index as index\\\">\\n  \\n          <ion-item  class=\\\"no-padding\\\">\\n            <ion-thumbnail>\\n              <ion-img class=\\\"imgmg\\\" src=\\\"{{prediction.type}}\\\"></ion-img>\\n            </ion-thumbnail> \\n            <ion-buttons slot=\\\"end\\\">\\n\\n              \\n        <ion-icon style= \\\"font-size: 25px; margin-right: -1vw\\\"  name=\\\"trash\\\" style='color:red' (click)=\\\"delete_item(prediction)\\\"></ion-icon>\\n      </ion-buttons>\\n      <ion-label>{{ prediction.price }} </ion-label>\\n      <ion-label>{{prediction.day_month}}</ion-label>\\n    </ion-item>\\n          \\n        \\n       </div>\\n          </ion-list>\\n         \\n\\n        </ion-card>\\n        \\n      </ion-col>\\n    \\n    </ion-row>\\n  </ion-grid>\\n   -->\\n  \\n</ion-content>\\n</div>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PredictionsPage } from './predictions.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PredictionsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PredictionsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PredictionsPageRoutingModule } from './predictions-routing.module';\n\nimport { PredictionsPage } from './predictions.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PredictionsPageRoutingModule\n  ],\n  declarations: [PredictionsPage]\n})\nexport class PredictionsPageModule {}\n","export default \"#tbl_btc td {\\n  border: 1px solid black;\\n  padding: 4px;\\n  background-color: #015f01d5;\\n  color: white;\\n  text-align: center;\\n}\\n\\n#tbl_btc th {\\n  border: 1px solid black;\\n  padding: 4px;\\n  background-color: white;\\n  text-align: center;\\n}\\n\\n#tbl_eth th {\\n  border: 1px solid black;\\n  padding: 4px;\\n  background-color: white;\\n  text-align: center;\\n}\\n\\n#tbl_eth td {\\n  border: 1px solid black;\\n  padding: 4px;\\n  background-color: #A24E33;\\n  color: white;\\n  text-align: center;\\n}\\n\\nion-title, ion-toolbar, ion-header {\\n  font-size: 120%;\\n  color: white;\\n  font-weight: bold;\\n}\\n\\nion-menu-button {\\n  color: var(--ion-color-primary);\\n}\\n\\nion-toolbar, ion-header {\\n  --min-height: 60px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJlZGljdGlvbnMvQzpcXFVzZXJzXFxNYXggQm9zY2hcXHRoZXNpcy9zcmNcXGFwcFxccHJlZGljdGlvbnNcXHByZWRpY3Rpb25zLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcHJlZGljdGlvbnMvcHJlZGljdGlvbnMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksdUJBQUE7RUFDSixZQUFBO0VBQ0EsMkJBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7QUNDQTs7QURDQTtFQUFZLHVCQUFBO0VBQ1IsWUFBQTtFQUNBLHVCQUFBO0VBQ0osa0JBQUE7QUNHQTs7QUREQTtFQUFZLHVCQUFBO0VBQ1IsWUFBQTtFQUNBLHVCQUFBO0VBQ0osa0JBQUE7QUNLQTs7QURGQTtFQUNJLHVCQUFBO0VBQ0osWUFBQTtFQUNBLHlCQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0FDS0E7O0FERkE7RUFDSSxlQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0FDS0o7O0FEREk7RUFDSSwrQkFBQTtBQ0lSOztBREZNO0VBQ0Usa0JBQUE7QUNLUiIsImZpbGUiOiJzcmMvYXBwL3ByZWRpY3Rpb25zL3ByZWRpY3Rpb25zLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiN0YmxfYnRjIHRke1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcbnBhZGRpbmc6NHB4O1xyXG5iYWNrZ3JvdW5kLWNvbG9yOiAjMDE1ZjAxZDU7XHJcbmNvbG9yOndoaXRlO1xyXG50ZXh0LWFsaWduOmNlbnRlcn1cclxuXHJcbiN0YmxfYnRjIHRoe2JvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xyXG4gICAgcGFkZGluZzo0cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxudGV4dC1hbGlnbjpjZW50ZXJ9XHJcblxyXG4jdGJsX2V0aCB0aHtib3JkZXI6IDFweCBzb2xpZCBibGFjaztcclxuICAgIHBhZGRpbmc6NHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbnRleHQtYWxpZ246Y2VudGVyfVxyXG5cclxuXHJcbiN0YmxfZXRoIHRke1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcbnBhZGRpbmc6NHB4O1xyXG5iYWNrZ3JvdW5kLWNvbG9yOiAjQTI0RTMzO1xyXG5jb2xvcjp3aGl0ZTtcclxudGV4dC1hbGlnbjpjZW50ZXJ9XHJcblxyXG5cclxuaW9uLXRpdGxlLCBpb24tdG9vbGJhciwgaW9uLWhlYWRlciB7XHJcbiAgICBmb250LXNpemU6IDEyMCU7XHJcbiAgICBjb2xvcjp3aGl0ZTtcclxuICAgIGZvbnQtd2VpZ2h0OmJvbGQ7XHJcbiAgICBcclxuICAgIH1cclxuXHJcbiAgICBpb24tbWVudS1idXR0b24ge1xyXG4gICAgICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XHJcbiAgICAgIH1cclxuICAgICAgaW9uLXRvb2xiYXIsIGlvbi1oZWFkZXIge1xyXG4gICAgICAgIC0tbWluLWhlaWdodDogNjBweDtcclxuICAgICAgIH0iLCIjdGJsX2J0YyB0ZCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xuICBwYWRkaW5nOiA0cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMTVmMDFkNTtcbiAgY29sb3I6IHdoaXRlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbiN0YmxfYnRjIHRoIHtcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XG4gIHBhZGRpbmc6IDRweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuI3RibF9ldGggdGgge1xuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgcGFkZGluZzogNHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4jdGJsX2V0aCB0ZCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xuICBwYWRkaW5nOiA0cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNBMjRFMzM7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5pb24tdGl0bGUsIGlvbi10b29sYmFyLCBpb24taGVhZGVyIHtcbiAgZm9udC1zaXplOiAxMjAlO1xuICBjb2xvcjogd2hpdGU7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG5pb24tbWVudS1idXR0b24ge1xuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xufVxuXG5pb24tdG9vbGJhciwgaW9uLWhlYWRlciB7XG4gIC0tbWluLWhlaWdodDogNjBweDtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { Predictions } from '../btc/btc.page';\nimport { AlertController } from '@ionic/angular';\nimport { LoginPage } from '../login/login.page'\nimport { LoginService } from '../services/login.service';\n\n@Component({\n  selector: 'app-predictions',\n  templateUrl: './predictions.page.html',\n  styleUrls: ['./predictions.page.scss'],\n})\nexport class PredictionsPage implements OnInit {\n  public predictions_btc: Predictions[] = [];\n  public predictions_eth: Predictions[] = [];\n  public logged_in_wait: boolean\n\n\n  public title: string = \"Predictions\";\n  public loaded: boolean = false;\n  headers = [\"day_month\", \"price\"];\n  headers_2 = [\"Day-Month Hour\", \"Price\"];\n\n\n\n  constructor(private storage: Storage, private alertCtrl: AlertController, public login: LoginService\n    ) { }\n  load(): Promise<boolean> {\n\n    return new Promise((resolve) => {\n\n      this.storage.get('predictions_btc').then((predictions_btc) => {\n\n        if(predictions_btc != null){\n          this.predictions_btc = predictions_btc;\n         \n\n          \n          \n        }\n        \n\n\n        \n        \n\n      });\n      this.storage.get('predictions_eth').then((predictions_eth) => {\n\n        if(predictions_eth != null){\n          this.predictions_eth = predictions_eth;\n         \n          \n          \n          \n        }\n        this.loaded = true;\n        resolve(true);})\n        \n    \n    });\n    \n    \n  }\n\n\n  delete_item(prediction,thing): void {\n\nif (thing == 'eth'){ let index = this.predictions_eth.indexOf(prediction);\n  if(index > -1){   \n\n    this.predictions_eth.splice(index, 1);\n    this.storage.set('predictions_eth', this.predictions_eth);\n  }\n}\nelse {    let index = this.predictions_btc.indexOf(prediction);\n\n    if(index > -1){\n      this.predictions_btc.splice(index, 1);\n      this.storage.set('predictions_btc', this.predictions_btc);\n    }\n\n  }}\n  async isLoggedin(){ this.logged_in_wait = await this.login.check_token()}\n\n\n\n  ngOnInit() {\n    \n\nthis.isLoggedin()\nthis.load();\n    \n  }\n\n  \n  async ionViewDidEnter () {\n    \n    await this.isLoggedin()}\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { tap } from 'rxjs/operators';\nimport { Storage } from '@ionic/storage';\nimport { ConnectionService } from './connection.service';\nimport { Router } from '@angular/router';\nimport { NavController } from '@ionic/angular';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class LoginService {\n  \n\n  constructor( private storage: Storage, private router: Router\n    ) { }\n\nasync check_token() {\n\n    var res = await this.storage.get('token') \n    \n    if (res ==null){this.router.navigate(['login'])}\n  else {return true}     \n;\n\n           }\n          \n          \nasync logout(){\n  await this.storage.set('token',null)\n      this.router.navigate(['login']);\n\n}          \n          }"]}