{"version":3,"sources":["webpack:///src/app/eth/eth.page.html","webpack:///src/app/eth/eth-routing.module.ts","webpack:///src/app/eth/eth.module.ts","webpack:///src/app/eth/eth.page.scss","webpack:///src/app/eth/eth.page.ts"],"names":["routes","path","component","EthPageRoutingModule","imports","forChild","exports","EthPageModule","declarations","EthPage","storage","alertCtrl","ibmmodel","valService","login","loaded","predictions","rendered","hist_time","hist_price","pred_price","pred_time","Promise","resolve","get","then","isLoggedin","min_predict_value","min_value","getprice","check_token","logged_in_wait","prediction","set","userID","load","get_hist_price","get_chart","a","params","type","time","Date","now","value","res","setInterval","lineChart","lineCanvas","nativeElement","data","labels","datasets","fill","label","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","spanGaps","datalabels","color","align","display","borderWidth","options","maintainAspectRatio","responsive","title","text","scales","xAxes","distribution","ticks","fontSize","maxTicksLimit","scaleLabel","labelString","gridLines","yAxes","min","Math","floor","apply","filter","Boolean","max","ceil","legend","position","boxWidth","usePointStyle","url","hour12","hour","day","month","i","length","push","toLocaleDateString","j","includes","day_month","indexOf","price","year","parseInt","ibm_prediction_time","substr","fire","showLoading","predict_api","prediction_ibm","array_values","show_prediction","icon","mins","String","toString","imageUrl","imageWidth","imageHeight","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","cancelButtonText","result","getTime","timestamp","save","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,oBAAoB;AAAA;AAAA,KAAjC;;AAAaA,wBAAoB,6DAJhC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAIgC,GAApBH,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,QAAaI,aAAa;AAAA;AAAA,KAA1B;;AAAaA,iBAAa,6DATzB,+DAAS;AACRH,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,wEAJO,CADD;AAORI,kBAAY,EAAE,CAAC,iDAAD;AAPN,KAAT,CASyB,GAAbD,aAAa,CAAb;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmBf,QAAaE,OAAO;AAiBpB,uBAAoBC,OAApB,EAA8CC,SAA9C,EAAkFC,QAAlF,EAAuHC,UAAvH,EAAyJC,KAAzJ,EAA4K;AAAA;;AAAxJ,aAAAJ,OAAA,GAAAA,OAAA;AAA0B,aAAAC,SAAA,GAAAA,SAAA;AAAoC,aAAAC,QAAA,GAAAA,QAAA;AAAqC,aAAAC,UAAA,GAAAA,UAAA;AAAkC,aAAAC,KAAA,GAAAA,KAAA;AAflJ,aAAAC,MAAA,GAAiB,MAAjB;AACA,aAAAC,WAAA,GAA6B,EAA7B;AACA,aAAAC,QAAA,GAAmB,UAAnB;AAGP,aAAAC,SAAA,GAAe,EAAf;AACA,aAAAC,UAAA,GAAgB,EAAhB;AACA,aAAAC,UAAA,GAAgB,EAAhB;AACA,aAAAC,SAAA,GAAe,EAAf;AASO;;AAnBa;AAAA;AAAA,+BAoBd;AAAA;;AAEF,iBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAE9B,iBAAI,CAACb,OAAL,CAAac,GAAb,CAAiB,iBAAjB,EAAoCC,IAApC,CAAyC,UAACT,WAAD,EAAiB;AAExD,kBAAGA,WAAW,IAAI,IAAlB,EAAuB;AACrB,qBAAI,CAACA,WAAL,GAAmBA,WAAnB;AAID;;AAEDO,qBAAO,CAAC,IAAD,CAAP;AAED,aAXD;AAaD,WAfM,CAAP;AAgBD;AAtCiB;AAAA;AAAA,mCAwCT;AACT,eAAKG,UAAL;AAEA,eAAKC,iBAAL,GAAyB,KAAKd,UAAL,CAAgBe,SAAhB,EAAzB;AAEC,eAAKC,QAAL;AAMF;AAnDmB;AAAA;AAAA,qCAuDJ;;;;;;;AAA0B,2BAAM,KAAKf,KAAL,CAAWgB,WAAX,EAAN;;;AAAtB,yBAAKC,c;qDAClB;AAAC,+BAAQ,KAAKA;AAAd,qB;;;;;;;;;AAA8B;AAxDjB;AAAA;AAAA,6BA2DTC,UA3DS,EA2DG;;;;;;;AACrB,yBAAKd,SAAL,GAAgB,EAAhB;AACA,yBAAKC,UAAL,GAAiB,EAAjB;AACA,yBAAKC,UAAL,GAAiB,EAAjB;AACA,yBAAKC,SAAL,GAAgB,EAAhB;;AACD,2BAAM,KAAKX,OAAL,CAAauB,GAAb,CAAiB,iBAAjB,EAAoC,KAAKjB,WAAzC,CAAN;;;;AACa,2BAAM,KAAKN,OAAL,CAAac,GAAb,CAAiB,OAAjB,CAAN;;;AAATU,0B;;AACJ,2BAAM,KAAKC,IAAL,EAAN;;;AACA,wBAAID,MAAM,GAAG,IAAb,EAAkB;AAACA,4BAAM,GAAG,EAAT;AAAY;;;AAE/B,2BAAM,KAAKE,cAAL,EAAN;;;;AACA,2BAAM,KAAKC,SAAL,EAAN;;;;AACU,2BAAM,2CAAAC,CAAA,CAAMd,GAAN,CAAU,yDAAV,EAAoE;AAACe,4BAAM,EAAC;AAACL,8BAAM,EAACA,MAAR;AAAeM,4BAAI,EAAC,KAApB;AAA0BC,4BAAI,EAACC,IAAI,CAACC,GAAL,EAA/B;AAA0CC,6BAAK,EAACZ;AAAhD;AAAR,qBAApE,CAAN;;;AAANa,uB;;;;;;;;;;AAGJ;AA1EmB;AAAA;AAAA,oCAiFL;;;;;;;;AACbC,+BAAW,CAAC;AAAA,6BAAU;AAAA;AAAA;AAAA;AAAA;AAAG,qCAAKjB,QAAL;;AAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAV;AAAA,qBAAD,EAA+B,KAA/B,CAAX;AAKA,yBAAKkB,SAAL,GAAiB,IAAI,8CAAJ,CAAU,KAAKC,UAAL,CAAgBC,aAA1B,EAAyC;AACxDT,0BAAI,EAAE,MADkD;AAExDU,0BAAI,EAAE;AACJC,8BAAM,EAAE,KAAKjC,SADT;AAGJkC,gCAAQ,EAAE,CACR;AACEC,8BAAI,EAAE,IADR;AAEEC,+BAAK,EAAE,cAFT;AAGEC,qCAAW,EAAE,GAHf;AAIEC,yCAAe,EAAE,sBAJnB;AAKEC,qCAAW,EAAE,wBALf;AAMEC,wCAAc,EAAE,MANlB;AAOEC,oCAAU,EAAE,EAPd;AAQEC,0CAAgB,EAAE,GARpB;AASEC,yCAAe,EAAE,OATnB;AAUEC,0CAAgB,EAAE,0BAVpB;AAWEC,8CAAoB,EAAE,qBAXxB;AAYEC,0CAAgB,EAAE,CAZpB;AAaEC,0CAAgB,EAAE,CAbpB;AAcEC,mDAAyB,EAAE,qBAd7B;AAeEC,+CAAqB,EAAE,qBAfzB;AAgBEC,+CAAqB,EAAE,CAhBzB;AAiBEC,qCAAW,EAAE,CAjBf;AAkBEC,wCAAc,EAAE,EAlBlB;AAmBEpB,8BAAI,EAAE,KAAK/B,UAnBb;AAoBEoD,kCAAQ,EAAE,KApBZ;AAuBEC,oCAAU,EAAE;AACVC,iCAAK,EAAE,OADG;AAEVC,iCAAK,EAAE,KAFG;AAGVC,mCAAO,EAAE;AAHC;AAvBd,yBADQ,EAgCN;AACArB,+BAAK,EAAE,YADP;AAEAJ,8BAAI,EAAE,KAAK9B,UAFX;AAGAwD,qCAAW,EAAE,CAHb;AAIApB,yCAAe,EAAE,KAJjB;AAKAC,qCAAW,EAAE,KALb;AAMAM,8CAAoB,EAAE,KANtB;AAOAD,0CAAgB,EAAE,KAPlB;AAQAI,mDAAyB,EAAE,KAR3B;AASAC,+CAAqB,EAAE,KATvB;AAUA3B,8BAAI,EAAE,SAVN;AAWAgC,oCAAU,EAAE;AACVC,iCAAK,EAAE,OADG;AAEVC,iCAAK,EAAE,KAFG;AAGVC,mCAAO,EAAE;AAHC;AAXZ,yBAhCM;AAHN,uBAFkD;AAwDtDE,6BAAO,EAAE;AAAGC,2CAAmB,EAAE,KAAxB;AACTC,kCAAU,EAAE,IADH;AAETC,6BAAK,EAAE;AACLL,iCAAO,EAAE,KADJ;AAELM,8BAAI,EAAE;AAFD,yBAFE;AAMTC,8BAAM,EAAE;AACNC,+BAAK,EAAE,CAAC;AACJC,wCAAY,EAAG,QADX;AAEJT,mCAAO,EAAE,IAFL;AAGJU,iCAAK,EAAE;AAACC,sCAAQ,EAAE,EAAX;AACLC,2CAAa,EAAE;AADV,6BAHH;AAMJC,sCAAU,EAAE;AACRb,qCAAO,EAAE,KADD;AAERc,yCAAW,EAAE;AAFL,6BANR;AAUJC,qCAAS,EAAE;AACT/B,wCAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADH;AAETc,mCAAK,EAAE,SAFE;AAGTE,qCAAO,EAAE;AAHA;AAVP,2BAAD,CADD;AAkBNgB,+BAAK,EAAE,CAAC;AACNN,iCAAK,EAAE;AACHO,iCAAG,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,GAAL,CAAUC,IAAI,CAACD,GAAL,OAAAC,IAAI,qBAAQ,KAAK1E,UAAb,EAAd,EAAyC0E,IAAI,CAACD,GAAL,CAASC,IAAI,CAACD,GAAL,CAASG,KAAT,CAAe,CAAf,EAAkB,KAAK3E,UAAL,CAAgB4E,MAAhB,CAAuBC,OAAvB,CAAlB,CAAT,CAAzC,IAAwG,IAAnH,IAAyH,IAAzH,GAA+H,CADjI;AAEHC,iCAAG,EAAEL,IAAI,CAACM,IAAL,CAAUN,IAAI,CAACK,GAAL,CAAUL,IAAI,CAACK,GAAL,OAAAL,IAAI,qBAAQ,KAAK1E,UAAb,EAAd,EAAyC0E,IAAI,CAACK,GAAL,OAAAL,IAAI,qBAAQ,KAAKzE,UAAb,EAA7C,IAAwE,IAAlF,IAAwF,IAF1F;AAITmE,2CAAa,EAAIM,IAAI,CAACM,IAAL,CAAUN,IAAI,CAACK,GAAL,CAAUL,IAAI,CAACK,GAAL,OAAAL,IAAI,qBAAQ,KAAK1E,UAAb,EAAd,EAAyC0E,IAAI,CAACK,GAAL,OAAAL,IAAI,qBAAQ,KAAKzE,UAAb,EAA7C,IAAwE,IAAlF,CAAD,GAA2FyE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,GAAL,CAAUC,IAAI,CAACD,GAAL,OAAAC,IAAI,qBAAQ,KAAK1E,UAAb,EAAd,EAAyC0E,IAAI,CAACD,GAAL,CAASC,IAAI,CAACD,GAAL,CAASG,KAAT,CAAe,CAAf,EAAkB,KAAK3E,UAAL,CAAgB4E,MAAhB,CAAuBC,OAAvB,CAAlB,CAAT,CAAzC,IAAwG,IAAnH,CAA5F,GAAuN;AAJ7N,6BADD;AAQNP,qCAAS,EAAE;AACT/B,wCAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADH;AAETc,mCAAK,EAAE,SAFE;AAGTE,qCAAO,EAAE;AAHA;AARL,2BAAD;AAlBD,yBANC;AAuCXyB,8BAAM,EAAE;AACNzB,iCAAO,EAAE,IADH;AAEN0B,kCAAQ,EAAC,QAFH;AAGNlD,gCAAM,EACN;AAACmD,oCAAQ,EAAC,EAAV;AACEC,yCAAa,EAAC;AADhB;AAJM;AAvCG;AAxD6C,qBAAzC,CAAjB;;;;;;;;;AA0GD,SAjMmB,CAkMpB;AACA;;AAnMoB;AAAA;AAAA,0CAoMC;;;;;;;AACnB,2BAAM,KAAK7E,UAAL,EAAN;;;;AACA,2BAAM,KAAKS,IAAL,EAAN;;;;AACF,2BAAM,KAAKC,cAAL,EAAN;;;;AACA,2BAAM,KAAKC,SAAL,EAAN;;;sDACO;AAAC,8BAAO;AAAR,qB;;;;;;;;;AACN;AA1MmB;AAAA;AAAA,yCA4MA;;;;;;;AAGhBmE,uB,GAAM,kE;;AACE,2BAAM,2CAAAlE,CAAA,CAAMd,GAAN,CAAUgF,GAAV,CAAN;;;AAAN3D,uB;AAGFgC,2B,GAAU;AACZ4B,4BAAM,EAAE,KADI;AACEC,0BAAI,EAAC,SADP;AACiBC,yBAAG,EAAE,SADtB;AACgCC,2BAAK,EAAE;AADvC,qB;;AAGd,yBAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGhE,GAAG,CAACK,IAAJ,CAAS4D,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACtC,2BAAK3F,SAAL,CAAe6F,IAAf,CAAoB,IAAIrE,IAAJ,CAASG,GAAG,CAACK,IAAJ,CAAS2D,CAAT,EAAY,CAAZ,CAAT,EAAyBG,kBAAzB,CAA4C,IAA5C,EAAkDnC,OAAlD,CAApB;AACA,2BAAK1D,UAAL,CAAgB4F,IAAhB,CAAqBlB,IAAI,CAACC,KAAL,CAAWjD,GAAG,CAACK,IAAJ,CAAS2D,CAAT,EAAY,CAAZ,CAAX,CAArB;AACA,2BAAKzF,UAAL,CAAgB2F,IAAhB,CAAqB,CAArB,EAHsC,CAItC;AAEC;;AAED,yBAAKE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,KAAKjG,WAAL,CAAiB8F,MAAjC,EAAyCG,CAAC,EAA1C,EAA8C;AAC9C,0BAAI,KAAK/F,SAAL,CAAegG,QAAf,CAAwB,KAAKlG,WAAL,CAAiBiG,CAAjB,EAAoBE,SAA5C,CAAJ,EAA2D;AAGzD,6BAAK/F,UAAL,CAAiB,KAAKF,SAAL,CAAekG,OAAf,CAAuB,KAAKpG,WAAL,CAAiBiG,CAAjB,EAAoBE,SAA3C,CAAjB,IAA2E,KAAKnG,WAAL,CAAiBiG,CAAjB,EAAoBI,KAA/F;AACD;AAAC;;sDACK;AAAC,gCAAS,KAAKjG,UAAL,CAAgB0F;AAA1B,qB;;;;;;;;;AACN;AArOmB;AAAA;AAAA,mCAuON;;;;;;;AAGZ,yBAAKnF,iBAAL,GAAyB,KAAKd,UAAL,CAAgBe,SAAhB,EAAzB;;AAME4E,uB,GAAM,kE;;AACE,2BAAM,2CAAAlE,CAAA,CAAMd,GAAN,CAAUgF,GAAV,CAAN;;;AAAN3D,uB;;AAIN,wBAAIA,GAAG,CAACK,IAAJ,CAAS4D,MAAT,IAAmB,CAAvB,EAAyB;AACvB,2BAAK/F,MAAL,GAAc,KAAd;AAAoB,qBADtB,MAEO;AAAC,2BAAKA,MAAL,GAAY,IAAZ;AAAiB;;AAEzB,yBAAKsG,KAAL,GAAaxB,IAAI,CAACC,KAAL,CAAWjD,GAAG,CAACK,IAAJ,CAASL,GAAG,CAACK,IAAJ,CAAS4D,MAAT,GAAgB,CAAzB,EAA4B,CAA5B,CAAX,CAAb;sDACO;AAAC,mCAAY,KAAKO;AAAlB,qB;;;;;AAEA,yBAAKtG,MAAL,GAAc,IAAd;;;;;;;;;;AAEN;AA9PmB;AAAA;AAAA,sCAkQH;;;;;;;;AAEXuG,wB,GAAOC,QAAQ,CAAC,KAAKC,mBAAL,CAAyBC,MAAzB,CAAgC,CAAhC,EAAkC,CAAlC,CAAD,C;;;;;;;AAGb,uEAAKC,IAAL,CAAU,mDAAV;sDAAsE;AAAC,6BAAM,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL;AAAP,qB;;;AAC5E;AAEA;AACA;AACA,uEAAKA,IAAL,CAAU,qDAAV;AACA,uEAAKC,WAAL;;AACmB,2BAAM,KAAK/G,QAAL,CAAcgH,WAAd,CAA0B,KAAKJ,mBAA/B,EAAmD,KAAnD,CAAN;;;;AAAP,0CAAwEK,cAAxE;;;AAANhF,uB;;AACoB,2BAAM,KAAKjC,QAAL,CAAcgH,WAAd,CAA0B,KAAKJ,mBAA/B,EAAmD,KAAnD,CAAN;;;;AAAP,0CAAwE/E,IAAxE;;;AAAfqF,gC;;0BAECjF,GAAG,IAAI,I;;;;;;AACV,2BAAM,KAAKkF,eAAL,CAAqBlF,GAArB,EAAyBiF,YAAzB,CAAN;;;;;;;AACM,uEAAKJ,IAAL,CAAU;AACdM,0BAAI,EAAE,OADQ;AAEdhD,2BAAK,EAAE,6BAFO;AAGhBC,0BAAI,EAAC;AAHW,qBAAV;;;sDAOI;AAAC,6BAAM,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL;AAAP,qB;;;;;;;;;AACP;AA3Ra;AAAA;AAAA,wCA6REjD,UA7RF,EA6Ra8F,YA7Rb,EA6RyB;;;;;;;;;AACvCG,wB,GAAOH,YAAY,CAAC,CAAD,C;AACvBG,wBAAI,IAAG,EAAP,GAAWA,IAAI,GAAGC,MAAM,CAACD,IAAD,CAAxB,GAAiCA,IAAI,GAAG,MAAMC,MAAM,CAACD,IAAD,CAApD;AAEA,uEAAKP,IAAL,CAAU;AACR1C,2BAAK,EAAE,oCAAoCuC,QAAQ,CAACvF,UAAD,CAAR,CAAqBmG,QAArB,EAApC,GAAoE,cAApE,GAAmFD,MAAM,CAACJ,YAAY,CAAC,CAAD,CAAb,CAAzF,GAA2G,GAA3G,GAA+GI,MAAM,CAACJ,YAAY,CAAC,CAAD,CAAb,CAArH,GAAuI,GAAvI,GAA2II,MAAM,CAACJ,YAAY,CAAC,CAAD,CAAb,CAAjJ,GAAmK,MAAnK,GAA0KI,MAAM,CAACJ,YAAY,CAAC,CAAD,CAAb,CAAhL,GAAkM,GAAlM,GAAsMG,IADrM;AAERhD,0BAAI,EAAE,sCAFE;AAGRmD,8BAAQ,EAAE,yBAHF;AAIVC,gCAAU,EAAE,GAJF;AAKVC,iCAAW,EAAE,GALH;AAMRC,qCAAe,EAAE,KANT;AAORC,sCAAgB,EAAE,IAPV;AAQRC,kCAAY,EAAE,KARN;AASRC,uCAAiB,EAAC,MATV;AAURC,sCAAgB,EAAC;AAVT,qBAAV,EAWKlH,IAXL,CAWU,UAAOmH,MAAP;AAAA,6BAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACpBA,MAAM,CAAChG,KADa;AAAA;AAAA;AAAA;;AAK1B8D,oCAL0B,GAKnBwB,MAAM,CAAGJ,YAAY,CAAC,CAAD,CAAb,IAAmB,EAApB,GAAyBA,YAAY,CAAC,CAAD,CAArC,GAA2C,MAAOA,YAAY,CAAC,CAAD,CAA/D,CALa;AAO1BrF,oCAP0B,GAOnB,IAAIC,IAAJ,GAAWmG,OAAX,EAPmB;AAQ5B,qCAAK7H,WAAL,CAAiB+F,IAAjB,CAAsB;AACpBM,uCAAK,EAAEE,QAAQ,CAACvF,UAAD,CADK;AAEpBmF,2CAAS,EAAEe,MAAM,CAACJ,YAAY,CAAC,CAAD,CAAb,CAAN,GAAwB,GAAxB,GAA4BI,MAAM,CAACJ,YAAY,CAAC,CAAD,CAAb,CAAlC,GAAoD,GAApD,GAAwDpB,IAF/C;AAGpBoC,2CAAS,EAAErG,IAHS;AAIpBD,sCAAI,EAAE;AAJc,iCAAtB;AAR4B;AAc5B,uCAAM,KAAKuG,IAAL,CAAU/G,UAAV,CAAN;;AAd4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAlB;AAAA,qBAXV;uDAgCK;AAAC,6BAAM8F;AAAP,qB;;;;;;;;;AACN;AAlUmB;;AAAA;AAAA,OAApB;;;;cAiB6B;;cAA4B;;cAAmC;;cAAuC;;cAA6B;;;;AAjB/F,8DAAxB,gEAAU,YAAV,CAAwB,G,iBAAA,E,YAAA,E,MAAA;AAApDrH,WAAO,6DALnB,gEAAU;AACTuI,cAAQ,EAAE,SADD;AAETC,cAAQ,EAAR;AAAA;AAAA,sFAFS;;;;AAAA,KAAV,CAKmB,GAAPxI,OAAO,CAAP","file":"eth-eth-module-es5.js","sourcesContent":["export default \"<div [hidden]=!this.logged_in_wait>\\n\\n<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar mode=\\\"ios\\\">\\n    <ion-title style= \\\"position: absolute; \\\">Ethereum</ion-title>\\n\\n    <ion-buttons slot=\\\"start\\\" display=\\\"inline-block\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button expand=\\\"block\\\"  color=\\\"tertiary\\\" shape=\\\"round\\\" (click)=\\\"this.login.logout()\\\">\\n        <ion-text style=\\\"color:white\\\"> Logout </ion-text>\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"log-out\\\" style='color:white'  ></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-card style=\\\"background-color:#259ACB\\\"> \\n    <ion-card-title style=\\\"text-align:center; margin-top:10px; color:white\\\">Current price ($)</ion-card-title>\\n    <ion-card-content>\\n        \\n        <table  style='table-layout:fixed; width: 100%'>\\n         \\n          <tr>\\n            <td><img src=\\\"assets/icon/eth_png.png\\\"style=\\\"height:7vh;width:auto;padding-left:20vw\\\"></td>\\n            <td class='price' [innerHTML]=\\\"price\\\"></td>\\n          </tr>\\n         \\n       \\n        </table>\\n      \\n        \\n    </ion-card-content>\\n  </ion-card>\\n  \\n  \\n  <div *ngIf=\\\"this.loaded =='init'\\\">Rendering</div>\\n  <ion-card *ngIf= \\\"this.rendered  =='rendered'\\\" style=\\\" background-color:#90D377\\\">\\n    <ion-card-title style=\\\"text-align:center; margin-top:4px; color:white; font-weight: bold;\\\">Hourly prices</ion-card-title>\\n    \\n    \\n    <ion-card-content style=\\\"height:40vh;\\\">\\n      <canvas #lineCanvas></canvas>\\n      <div *ngIf=\\\"this.help =='help'\\\">Previous predictions are displayed in the graph above. They are displayed in an hourly format (i.e. a prediction for 11:34 is displayed as 11:00).</div>\\n    </ion-card-content>\\n  </ion-card>\\n  \\n  \\n  <ion-card style=\\\"background-color:#E56F49\\\"> \\n    <ion-card-title style=\\\"text-align:center; margin-top:4px; color:white; font-weight: bold;\\\">Predict with ML</ion-card-title>\\n\\n    <ion-card-content style='color:white'>\\n      <ion-item>\\n        <ion-datetime  min={{min_predict_value}} max=\\\"2023\\\" [(ngModel)] = \\\"ibm_prediction_time\\\" placeholder=\\\"Select Date and time\\\"\\n          [dayShortNames]=\\\"customDayShortNames\\\"\\n          displayFormat=\\\"YYYY-MMM-DD HH:mm\\\"\\n          monthShortNames=\\\"jan, feb, mar, apr, mai, jun, jul, aug, sep, okt, nov, des\\\"></ion-datetime>\\n      </ion-item>\\n      <ion-button style=\\\"--background: #A24E33\\\" id=\\\"saving\\\" expand=\\\"block\\\" (click)='predict_ibm()'>\\n        Predict!\\n    </ion-button>\\n    </ion-card-content>\\n  </ion-card>\\n  \\n</ion-content>  </div>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EthPage } from './eth.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EthPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EthPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EthPageRoutingModule } from './eth-routing.module';\n\nimport { EthPage } from './eth.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EthPageRoutingModule\n  ],\n  declarations: [EthPage]\n})\nexport class EthPageModule {}\n","export default \"ion-menu-button {\\n  color: var(--ion-color-primary);\\n}\\n\\nion-toolbar, ion-header {\\n  --min-height: 60px;\\n}\\n\\nion-title, ion-toolbar, ion-header {\\n  font-size: 120%;\\n  color: white;\\n}\\n\\n.price {\\n  font-size: 10vw;\\n  color: white;\\n}\\n\\n.overview tr td {\\n  width: 50%;\\n}\\n\\n.item-datetime {\\n  --ripple-color: black;\\n}\\n\\n.datetime-md .datetime-placeholder {\\n  color: red;\\n}\\n\\nion-content {\\n  --ion-background-color: black;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZXRoL0M6XFxVc2Vyc1xcTWF4IEJvc2NoXFx0aGVzaXMvc3JjXFxhcHBcXGV0aFxcZXRoLnBhZ2Uuc2NzcyIsInNyYy9hcHAvZXRoL2V0aC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSwrQkFBQTtBQ0NKOztBRENFO0VBQ0Usa0JBQUE7QUNFSjs7QURBRztFQUNDLGVBQUE7RUFDQSxZQUFBO0FDR0o7O0FEQ0c7RUFBTyxlQUFBO0VBQ04sWUFBQTtBQ0dKOztBREZJO0VBQWtCLFVBQUE7QUNNdEI7O0FESkk7RUFDQSxxQkFBQTtBQ09KOztBRExJO0VBQXFDLFVBQUE7QUNTekM7O0FEUkk7RUFBYSw2QkFBQTtBQ1lqQiIsImZpbGUiOiJzcmMvYXBwL2V0aC9ldGgucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLW1lbnUtYnV0dG9uIHtcclxuICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XHJcbiAgfVxyXG4gIGlvbi10b29sYmFyLCBpb24taGVhZGVyIHtcclxuICAgIC0tbWluLWhlaWdodDogNjBweDtcclxuICAgfVxyXG4gICBpb24tdGl0bGUsIGlvbi10b29sYmFyLCBpb24taGVhZGVyIHtcclxuICAgIGZvbnQtc2l6ZTogMTIwJTtcclxuICAgIGNvbG9yOndoaXRlO1xyXG4gICB9XHJcblxyXG4gICBcclxuICAgLnByaWNle2ZvbnQtc2l6ZToxMHZ3O1xyXG4gICAgY29sb3I6d2hpdGU7fVxyXG4gICAgLm92ZXJ2aWV3IHRyIHRkIHsgd2lkdGg6NTAlOyB9XHJcblxyXG4gICAgLml0ZW0tZGF0ZXRpbWUge1xyXG4gICAgLS1yaXBwbGUtY29sb3I6IGJsYWNrO31cclxuXHJcbiAgICAuZGF0ZXRpbWUtbWQgLmRhdGV0aW1lLXBsYWNlaG9sZGVyIHsgY29sb3I6IHJlZDsgfVxyXG4gICAgaW9uLWNvbnRlbnQgey0taW9uLWJhY2tncm91bmQtY29sb3I6IGJsYWNrO31cclxuIiwiaW9uLW1lbnUtYnV0dG9uIHtcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5KTtcbn1cblxuaW9uLXRvb2xiYXIsIGlvbi1oZWFkZXIge1xuICAtLW1pbi1oZWlnaHQ6IDYwcHg7XG59XG5cbmlvbi10aXRsZSwgaW9uLXRvb2xiYXIsIGlvbi1oZWFkZXIge1xuICBmb250LXNpemU6IDEyMCU7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLnByaWNlIHtcbiAgZm9udC1zaXplOiAxMHZ3O1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5vdmVydmlldyB0ciB0ZCB7XG4gIHdpZHRoOiA1MCU7XG59XG5cbi5pdGVtLWRhdGV0aW1lIHtcbiAgLS1yaXBwbGUtY29sb3I6IGJsYWNrO1xufVxuXG4uZGF0ZXRpbWUtbWQgLmRhdGV0aW1lLXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IHJlZDtcbn1cblxuaW9uLWNvbnRlbnQge1xuICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbn0iXX0= */\";","import { Component, OnInit, ViewChild, ElementRef } from \"@angular/core\";\nimport { Chart } from \"chart.js\";\nimport axios from 'axios'\nimport { Storage } from '@ionic/storage';\nimport { findLast } from '@angular/compiler/src/directive_resolver';\nimport { AlertController } from '@ionic/angular';\nimport { AuthorizationV1} from 'ibm-watson/sdk'\nimport{IamAuthenticator} from 'ibm-watson/auth'\nimport {Request} from 'request'\nimport Swal from 'sweetalert2'\nimport {PredictionsService} from '../services/predictions.service'\nimport { MinvalService } from '../services/minval.service';\nimport { LoginService } from '../services/login.service';\n\n@Component({  \n  selector: 'app-eth',\n  templateUrl: './eth.page.html',\n  styleUrls: ['./eth.page.scss'],\n})\nexport class EthPage implements OnInit {@ViewChild(\"lineCanvas\") lineCanvas: any;\nprivate lineChart: Chart;\npublic loaded: string = 'init';\npublic predictions: Predictions[] = [];\npublic rendered: string = 'rendered';\ntime:any;\nprice:number;\nhist_time:any =[]\nhist_price:any =[]\npred_price:any =[]\npred_time:any =[]\nmin_predict_value:string\nibm_prediction_time:string\npublic logged_in_wait: boolean\n\n\n\nconstructor(private storage: Storage, private alertCtrl: AlertController, private ibmmodel: PredictionsService, public valService: MinvalService, public login: LoginService\n\n  ) { }\n  load(): Promise<boolean> {\n\n    return new Promise((resolve) => {\n\n      this.storage.get('predictions_eth').then((predictions) => {\n\n        if(predictions != null){\n          this.predictions = predictions;\n          \n          \n          \n        }\n\n        resolve(true);\n\n      });\n\n    });\n  }\n  \nngOnInit() {  \n  this.isLoggedin()\n\n  this.min_predict_value = this.valService.min_value()\n  \n   this.getprice();\n  \n  \n  \n\n\n}\n\n\n\nasync isLoggedin(){ this.logged_in_wait = await this.login.check_token();\nreturn {\"login\":this.logged_in_wait}}\n\n\nasync save(prediction) {\n  this.hist_time =[]\n  this.hist_price =[]\n  this.pred_price =[]\n  this.pred_time =[]\n await this.storage.set('predictions_eth', this.predictions);\n var userID = await this.storage.get('token')\n await this.load();\n if (userID = null){userID = 39}\n\n await this.get_hist_price();\n await this.get_chart();\n let res = await axios.get('https://nodemrbosch.azurewebsites.net/api/addprediction',{params:{userID:userID,type:'eth',time:Date.now(),value:prediction}});\n  \nreturn\n}\n\n\n\n\n\n\nasync get_chart(){\n  setInterval(async() =>{  this.getprice()},60000);  \n\n  \n\n\n  this.lineChart = new Chart(this.lineCanvas.nativeElement, {\n    type: \"line\",\n    data: {\n      labels: this.hist_time,\n     \n      datasets: [\n        {\n          fill: true,\n          label: \"Actual price\",\n          lineTension: 0.3,\n          backgroundColor: \"rgb(5, 156, 45, 0.6)\",\n          borderColor: \"rgba(220, 220, 220, 1)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgba(220, 220, 220, 0.5)\",\n          pointBackgroundColor: \"rgba(220,220,220,1)\",\n          pointBorderWidth: 1,\n          pointHoverRadius: 1,\n          pointHoverBackgroundColor: \"rgba(220,220,220,1)\",\n          pointHoverBorderColor: \"rgba(220,220,220,1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: this.hist_price,\n          spanGaps: false,\n          \n          \n          datalabels: {\n            color: 'black',\n            align: 'end',\n            display: false\n\n            \n              \n        }\n        },{\n          label: \"Prediction\",\n          data: this.pred_price,\n          borderWidth: 2,\n          backgroundColor: \"red\",\n          borderColor: \"red\",\n          pointBackgroundColor: \"red\",\n          pointBorderColor: \"red\",\n          pointHoverBackgroundColor: \"red\",\n          pointHoverBorderColor: \"red\",\n          type: 'scatter',\n          datalabels: {\n            color: 'black',\n            align: 'end',\n            display: false\n            \n              \n        }\n       }]\n    },options: {  maintainAspectRatio: false, \n      responsive: true, \n      title: {\n        display: false,\n        text: 'Bitcoin price ($) in 2020'\n    },\n      scales: {\n        xAxes: [{\n            distribution : 'series',\n            display: true,\n            ticks: {fontSize: 10,\n              maxTicksLimit: 4.1,\n                  },\n            scaleLabel: {\n                display: false,\n                labelString: \"Date\",\n            },\n            gridLines: {\n              borderDash: [8, 4],\n              color: \"#348632\",\n              display: false\n          },\n        }]\n        ,\n        yAxes: [{\n          ticks: {\n              min: Math.floor(Math.min((Math.min(...this.hist_price)),(Math.min(Math.min.apply(0, this.pred_price.filter(Boolean)))))/1000)*1000 +1,\n              max: Math.ceil(Math.max((Math.max(...this.hist_price)),(Math.max(...this.pred_price)))/1000)*1000,\n             \n        maxTicksLimit: ((Math.ceil(Math.max((Math.max(...this.hist_price)),(Math.max(...this.pred_price)))/1000))-(Math.floor(Math.min((Math.min(...this.hist_price)),(Math.min(Math.min.apply(0, this.pred_price.filter(Boolean)))))/1000)))+2,\n        \n          },\n          gridLines: {\n            borderDash: [8, 4],\n            color: \"#348632\",\n            display: false\n        },\n      }]\n    },    \n    legend: {\n      display: true,\n      position:'bottom',\n      labels:\n      {boxWidth:10,\n        usePointStyle:true}\n    }\n    }\n    \n  });\n\n}\n// async ionViewWillEnter (){\n// }\nasync ionViewDidEnter () {\n  await this.isLoggedin()\n  await this.load();\nawait this.get_hist_price();\nawait this.get_chart()\nreturn {'done':true}\n}\n\nasync get_hist_price()\n{\n\nvar url = \"https://api.binance.com/api/v1/klines?symbol=ETHUSDT&interval=1h\";\nconst res = await axios.get(url)\n\nvar i;\nvar options = {\n  hour12: false,hour:'numeric',day: 'numeric',month: 'numeric',\n};\nfor (i = 0; i < res.data.length; i++) {\nthis.hist_time.push(new Date(res.data[i][0]).toLocaleDateString('nl', options));\nthis.hist_price.push(Math.floor(res.data[i][1]))\nthis.pred_price.push(0)\n// this.pred_time.push(new Date(res.data[i][0]).toLocaleDateString('en', options))\n\n}\nvar j;\nfor (j = 0; j < this.predictions.length; j++) {\nif (this.hist_time.includes(this.predictions[j].day_month)){\n  \n  \n  this.pred_price[(this.hist_time.indexOf(this.predictions[j].day_month))] = this.predictions[j].price\n}}\nreturn {'length':this.pred_price.length}\n}\n\nasync getprice()\n{\n\n  this.min_predict_value = this.valService.min_value()\n\n\n  \ntry{\n\nvar url = \"https://api.binance.com/api/v1/klines?symbol=ETHUSDT&interval=1m\";\nconst res = await axios.get(url)\n\n\n\nif (res.data.length != 0){\n  this.loaded = 'yes'}\n  else {this.loaded='no'}\n\nthis.price = Math.floor(res.data[res.data.length-1][1])\nreturn {'price_eth':this.price}\n}\ncatch {this.loaded = 'no'; return}\n\n}\n\n\n\nasync predict_ibm(){\n  try{\n  var year = parseInt(this.ibm_prediction_time.substr(0,4))\n  \n  }\n  catch{Swal.fire('Please select a date and time for your prediction'); return{'val':[0,0,0]}}\n  // Paste your Watson Machine Learning service apikey here\n  \n  // Use this code as written to get an access token from IBM Cloud REST API\n  //\n  Swal.fire('Please hold on while we are getting your prediction')\n  Swal.showLoading()\n  const res = await (await this.ibmmodel.predict_api(this.ibm_prediction_time,'eth')).prediction_ibm\n  var array_values = await (await this.ibmmodel.predict_api(this.ibm_prediction_time,'eth')).time\n\n   if (res != null){\n    await this.show_prediction(res,array_values)\n    }else{Swal.fire({\n      icon: 'error',\n      title: 'The model is currently down',\n    text:'We have logged your error and will resolve it as soon as possible'})\n        }\n\n\n        return{'val':[0,0,0]}\n      }\n\nasync show_prediction(prediction,array_values){\n  var mins = array_values[4]\n  mins >=10? mins = String(mins) : mins = '0' + String(mins)\n  \n  Swal.fire({\n    title: 'You predicted 1 ethereum to be ' + parseInt(prediction).toString()+' dollars in '+String(array_values[2])+\"-\"+String(array_values[1])+\"-\"+String(array_values[0])+\" at \"+String(array_values[3])+\":\"+mins,\n    text: 'Do you want to save this prediction?',\n    imageUrl: \"../../assets/img/ML.png\",\n  imageWidth: 288,\n  imageHeight: 162,\n    showCloseButton: false,\n    showCancelButton: true,\n    focusConfirm: false,\n    confirmButtonText:'Save',\n    cancelButtonText:'Cancel',\n    }).then(async (result) => {\n      if (result.value){\n\n   \n\nvar hour = String(((array_values[3])>=10)? array_values[3] : '0' + (array_values[3]));\n\nvar time = new Date().getTime()\n  this.predictions.push({\n    price: parseInt(prediction),\n    day_month: String(array_values[2])+\"-\"+String(array_values[1])+\" \"+hour,\n    timestamp: time,\n    type: \"Eth\"\n  });   \n  await this.save(prediction);\n\n\n\n\n  }\n})\nreturn {'val':array_values}\n}\n\n\n}\nexport interface Predictions {\nprice: number;\nday_month: any;\ntimestamp: number;\ntype: string;\n\n}"]}